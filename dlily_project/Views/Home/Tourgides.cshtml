@using dlily_project.DAL.Models.Users;
@model List<Tourgide>

@{
    ViewData["Title"] = "Tour Guides";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Add loading overlay styles */
        .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        transition: opacity 0.3s ease;
        }

        .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        }

          :root {
            --primary: #2C3E50;
            --secondary: #3498DB;
            --accent: #E74C3C;
            --text: #34495E;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }

        body {
            background: #ECF0F1;
            padding: 2rem;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Filters Section */
        .filters {
            margin: 3rem 0 3rem 0;  
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }

        .filter-group {
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 0.8rem 1rem;
            border: 2px solid #BDC3C7;
            border-radius: 8px;
            font-size: 1rem;
        }

        /* Guide Grid */
        .guide-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 2rem;
        }

        .guide-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            transition: transform 0.3s ease;
            position: relative;
        }

        .guide-card:hover {
            transform: translateY(-5px);
        }

        .guide-header {
            position: relative;
        }

        .guide-photo {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-radius: 12px 12px 0 0;
        }

        .badge {
            position: absolute;
            top: 1rem;
            left: 1rem;
            background: var(--accent);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
        }

        .guide-content {
            padding: 1.5rem;
        }

        .guide-name {
            font-size: 1.25rem;
            color: var(--primary);
            margin-bottom: 0.5rem;
        }

        .guide-rating {
            color: #F1C40F;
            margin-bottom: 1rem;
        }

        .guide-details {
            margin: 1rem 0;
            color: var(--text);
        }

        .detail-item {
            display: flex;
            align-items: center;
            margin: 0.5rem 0;
            gap: 0.75rem;
        }

        .languages {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .language-tag {
            background: #EBF5FB;
            color: var(--secondary);
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.85rem;
        }

 

        .guide-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #ECF0F1;
        }

        .price {
            color: var(--primary);
            font-weight: bold;
            font-size: 1.1rem;
        }

        .contact-btn {
            background: var(--secondary);
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .contact-btn:hover {
            background: #2980B9;
        }
    </style>
</head>
<body>
    <!-- Loading overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="spinner"></div>
    </div>

    <div class="container">
        <div class="filters">
            <div class="filter-group">
                <input type="text" class="search-input" placeholder="Search guides..." id="searchInput">
            </div>
            <div class="filter-group">
                <select class="search-input" id="languageFilter">
                    <option value="">All Languages</option>
                    <option>English</option>
                    <option>Spanish</option>
                    <option>French</option>
                </select>
            </div>
        </div>

        <div class="guide-grid">
            @if (Model != null && Model.Any())
            {   
                @foreach (var guide in Model)
                {
                    <div class="guide-card" data-languages="@guide.SpokenLanguage.ToLower()">
                        <div class="guide-header">
                            <img src="@(guide.ProfilePicture != null && guide.ProfilePicture.Length > 0
        ? $"data:image/png;base64,{Convert.ToBase64String(guide.ProfilePicture)}"
        : "/images/placeholder.jpg")"
                                 class="guide-photo"
                                 alt="@guide.Name"
                                 loading="lazy">

                        </div>
                        <div class="guide-content">
                            <h3 class="guide-name">@guide.Name</h3>
                            <div class="guide-rating">
                                @{
                                    var fullStars = (int)guide.Rating;
                                    var hasHalfStar = guide.Rating - fullStars >= 0.5;
                                }
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                @if (hasHalfStar)
                                {
                                    <i class="fas fa-star-half-alt"></i>
                                }
                                <span>(@guide.Rating.ToString("0.0"))</span>
                            </div>
                            <div class="languages">
                                @foreach (var lang in guide.SpokenLanguage.Split(','))
                                {
                                    <span class="language-tag">@lang.Trim()</span>
                                }
                            </div>
                            <div class="guide-details">
                                <p>@guide.Description</p>
                            </div>
                            <div class="guide-footer">
                                <span class="price">@(guide.Price * 10)/day</span>
                                <button class="contact-btn" 
                                        onclick="location.href='mailto:@guide.Email'">
                                    Contact
                                </button>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No tour guides found.</p>
            }
        </div>
    </div>

    <script>
        // Hide loading overlay when content is loaded
        window.addEventListener('load', () => {
            document.getElementById('loadingOverlay').style.opacity = '0';
            setTimeout(() => {
                document.getElementById('loadingOverlay').style.display = 'none';
            }, 300);
        });

        // Add search functionality
        document.getElementById('searchInput').addEventListener('input', filterGuides);
        document.getElementById('languageFilter').addEventListener('change', filterGuides);

        function filterGuides() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const languageFilter = document.getElementById('languageFilter').value.toLowerCase();
            
            document.querySelectorAll('.guide-card').forEach(card => {
                const name = card.querySelector('.guide-name').textContent.toLowerCase();
                const languages = card.dataset.languages;
                
                const nameMatch = name.includes(searchTerm);
                const languageMatch = !languageFilter || languages.includes(languageFilter);
                
                card.style.display = (nameMatch && languageMatch) ? 'block' : 'none';
            });
        }
    </script>
</body>
</html>
